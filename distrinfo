#!/bin/bash

# (C) 2025, Alexey Mazurenko, aka kp580a
# The code is distributed under the BSD-2 license!
# Version 0.2-1

VERSION="0.2-1"

# Определение цветов
SECOND_COLOR=$(tput setaf 3)
FIRST_COLOR=$(tput setaf 14)
RESET=$(tput sgr0)

# Общая информация
WHOAMI=$(whoami)
KERNEL_NAME=$(uname -s)
KERNEL_VERSION=$(uname -r)
KERNEL_TYPE=$(uname -o 2>/dev/null || echo "Unknown")  # uname -o нет в FreeBSD
ARCH=$(uname -m)

# Определение CPU
if [ "$KERNEL_NAME" = "Linux" ]; then
    CPU_NAME=$(grep "model name" /proc/cpuinfo | head -n 1 | cut -d ":" -f 2 | sed 's/^[ \t]*//')
elif [ "$KERNEL_NAME" = "FreeBSD" ]; then
    CPU_NAME=$(sysctl -n hw.model)
fi

# Определение GPU
if [ "$KERNEL_NAME" = "Linux" ]; then
    GPU_NAME=$(lspci | grep -i "VGA\|3D\|Display" | cut -d ":" -f 3 | sed 's/^[ \t]*//')
else
    GPU_NAME="Not detected (use 'pciconf -lv' in FreeBSD)"
fi

# Определение памяти
if [ "$KERNEL_NAME" = "Linux" ]; then
    USED_MEM=$(free -h --giga | grep "Mem:" | awk '{print $3}')
    TOTAL_MEM=$(free -h --giga | grep "Mem:" | awk '{print $2}')
elif [ "$KERNEL_NAME" = "FreeBSD" ]; then
    TOTAL_MEM=$(sysctl -n hw.physmem | awk '{print $0/1024/1024/1024"G"}')
    USED_MEM=$(top -d1 | grep "Mem" | awk '{print $3"G"}')  # Примерно, лучше использовать vmstat
fi

if [ "$1" == "-v" ]; then
    echo "Version $VERSION."
    exit 0
fi

if [ "$1" == "-h" ]; then
    echo "Help coming soon..."
    exit 0
fi

echo ""
echo "${SECOND_COLOR}System information${RESET}"
echo ""
echo "${FIRST_COLOR}Kernel type : ${SECOND_COLOR}$KERNEL_TYPE${RESET}"
echo "${FIRST_COLOR}Kernel : ${SECOND_COLOR}$KERNEL_NAME $KERNEL_VERSION${RESET}"
echo "${FIRST_COLOR}Architecture : ${SECOND_COLOR}$ARCH${RESET}"
echo "${FIRST_COLOR}User name : ${SECOND_COLOR}$WHOAMI${RESET}"
echo ""
echo "${SECOND_COLOR}Hardware information${RESET}"
echo ""
echo "${FIRST_COLOR}CPU : ${SECOND_COLOR}$CPU_NAME${RESET}"
echo "${FIRST_COLOR}GPU : ${SECOND_COLOR}$GPU_NAME${RESET}"
echo ""
echo "${FIRST_COLOR}Mem [used / total] : ${SECOND_COLOR}$USED_MEM / $TOTAL_MEM ${RESET}"
echo ""
